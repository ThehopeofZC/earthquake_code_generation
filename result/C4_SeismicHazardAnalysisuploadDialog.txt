bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadMicrotremorTable()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取地脉动数据表...\r\n");
	vector<_MICROTREMORTABLE> vec_MicrotremorTable;
	if(!obReader.EsGetMicrotremorTable(vec_MicrotremorTable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地脉动数据表获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地脉动数据表获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传地脉动数据表...\r\n");
	if(!EsAddMicrotremorTableToNetDB(m_nSId, vec_MicrotremorTable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地脉动数据表上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地脉动数据表上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadSCATable()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取场地分类场地放大系数表...\r\n");
	vector<_SCATABLE> vec_SCATable;
	if(!obReader.EsGetSCATable(vec_SCATable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("场地分类场地放大系数表获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("场地分类场地放大系数表获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传场地分类场地放大系数表...\r\n");
	if(!EsAddSCATableToNetDB(m_nSId, vec_SCATable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("场地分类场地放大系数表上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("场地分类场地放大系数表上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadSRAnalysisScenariosTbl()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取地震危害性分析结果表...\r\n");
	vector<_SRANALYSISSCENARIOSTBL> vec_SRAnalysisScenariosTbl;
	if(!obReader.EsGetSRAnalysisScenariosTbl(vec_SRAnalysisScenariosTbl))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震危害性分析结果表获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震危害性分析结果表获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传地震危害性分析结果表...\r\n");
	if(!EsAddSRAnalysisScenariosTblToNetDB(m_nSId, vec_SRAnalysisScenariosTbl))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震危害性分析结果表上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震危害性分析结果表上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadSRSTable()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取地震动时程曲线反应谱曲线...\r\n");
	vector<_SRSTABLE> vec_SRSTable;
	if(!obReader.EsGetSRSTable(vec_SRSTable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震动时程曲线反应谱曲线获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震动时程曲线反应谱曲线获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传地震动时程曲线反应谱曲线...\r\n");
	if(!EsAddSRSTableToNetDB(m_nSId, vec_SRSTable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震动时程曲线反应谱曲线上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地震动时程曲线反应谱曲线上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadSSPFTable()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取强地震动预测基础数据表...\r\n");
	vector<_SSPFTABLE> vec_SSPFTable;
	if(!obReader.EsGetSSPFTable(vec_SSPFTable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强地震动预测基础数据表获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强地震动预测基础数据表获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传强地震动预测基础数据表...\r\n");
	if(!EsAddSSPFTableToNetDB(m_nSId, vec_SSPFTable))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强地震动预测基础数据表上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强地震动预测基础数据表上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadForbiddenBelt()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取避让带表...\r\n");
	vector<_FORBIDDENBELT> vec_ForbiddenBelt;
	if(!obReader.EsGetForbiddenBelt(vec_ForbiddenBelt))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("避让带表获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("避让带表获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传避让带表...\r\n");
	if(!EsAddForbiddenBeltToNetDB(m_nSId, vec_ForbiddenBelt))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("避让带表上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("避让带表上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadReactingRegion()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取采取对策措施的区域...\r\n");
	vector<_REACTINGREGION> vec_ReactingRegion;
	if(!obReader.EsGetReactingRegion(vec_ReactingRegion))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("采取对策措施的区域获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("采取对策措施的区域获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传采取对策措施的区域...\r\n");
	if(!EsAddReactingRegionToNetDB(m_nSId, vec_ReactingRegion))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("采取对策措施的区域上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("采取对策措施的区域上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadRSAPoint()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取反应谱峰值和周期分布点图...\r\n");
	vector<_RSAPOINT> vec_RSAPoint;
	if(!obReader.EsGetRSAPoint(vec_RSAPoint))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("反应谱峰值和周期分布点图获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("反应谱峰值和周期分布点图获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传反应谱峰值和周期分布点图...\r\n");
	if(!EsAddRSAPointToNetDB(m_nSId, vec_RSAPoint))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("反应谱峰值和周期分布点图上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("反应谱峰值和周期分布点图上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadRuptureForecast()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取地表破裂带表预测...\r\n");
	vector<_RUPTUREFORECAST> vec_RuptureForecast;
	if(!obReader.EsGetRuptureForecast(vec_RuptureForecast))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地表破裂带表预测获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地表破裂带表预测获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传地表破裂带表预测...\r\n");
	if(!EsAddRuptureForecastToNetDB(m_nSId, vec_RuptureForecast))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地表破裂带表预测上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("地表破裂带表预测上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadSDBPrediction()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取强变形带表预测...\r\n");
	vector<_SDBPREDICTION> vec_SDBPrediction;
	if(!obReader.EsGetSDBPrediction(vec_SDBPrediction))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强变形带表预测获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强变形带表预测获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传强变形带表预测...\r\n");
	if(!EsAddSDBPredictionToNetDB(m_nSId, vec_SDBPrediction))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强变形带表预测上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("强变形带表预测上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadTimeSeriesApexPoint()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取目标区的时程峰值点图...\r\n");
	vector<_TIMESERIESAPEXPOINT> vec_TimeSeriesApexPoint;
	if(!obReader.EsGetTimeSeriesApexPoint(vec_TimeSeriesApexPoint))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的时程峰值点图获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的时程峰值点图获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传目标区的时程峰值点图...\r\n");
	if(!EsAddTimeSeriesApexPointToNetDB(m_nSId, vec_TimeSeriesApexPoint))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的时程峰值点图上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的时程峰值点图上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadTRGeologyZoning()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取目标区的典型地质区划图...\r\n");
	vector<_TRGEOLOGYZONING> vec_TRGeologyZoning;
	if(!obReader.EsGetTRGeologyZoning(vec_TRGeologyZoning))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的典型地质区划图获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的典型地质区划图获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传目标区的典型地质区划图...\r\n");
	if(!EsAddTRGeologyZoningToNetDB(m_nSId, vec_TRGeologyZoning))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的典型地质区划图上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("目标区的典型地质区划图上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadUg3DGridPoint()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取三维地下结构模型层面构架点...\r\n");
	vector<_UG3DGRIDPOINT> vec_Ug3DGridPoint;
	if(!obReader.EsGetUg3DGridPoint(vec_Ug3DGridPoint))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("三维地下结构模型层面构架点获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("三维地下结构模型层面构架点获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传三维地下结构模型层面构架点...\r\n");
	if(!EsAddUg3DGridPointToNetDB(m_nSId, vec_Ug3DGridPoint))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("三维地下结构模型层面构架点上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("三维地下结构模型层面构架点上传成功！\r\n");
	return true;
}
bool CSB_GDB_UPLOAD_TOOLDlg::EsUploadUg3DMeshLattice()
{
	EsGDBReader obReader;
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在获取3D地下结构离散化模型点...\r\n");
	vector<_UG3DMESHLATTICE> vec_Ug3DMeshLattice;
	if(!obReader.EsGetUg3DMeshLattice(vec_Ug3DMeshLattice))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("3D地下结构离散化模型点获取失败！\r\n");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false;
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("3D地下结构离散化模型点获取成功！\r\n");
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("正在上传3D地下结构离散化模型点...\r\n");
	if(!EsAddUg3DMeshLatticeToNetDB(m_nSId, vec_Ug3DMeshLattice))
	{
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("3D地下结构离散化模型点上传失败!");
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel(obReader.EsGetError());
		((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("\r\n");
		return false
	}
	((CEdit*)GetDlgItem(IDC_EDIT_PROCESS_INFO))->ReplaceSel("3D地下结构离散化模型点上传成功！\r\n");
	return true;
}
